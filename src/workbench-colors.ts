import { ThemeMode, ThemeSubtype, WorkbenchColors } from './models'
import PALETTE from './palette'
import { opacity } from './util'
import applyWorkbenchFallbacks from './workbench-fallbacks'

const p = PALETTE
const TRANSPARENT = '#00000000'

const darkBrand = {
  bg: p.blue.a700,
  bgInactive: p.neutral[710],
  bgHover: p.neutral[780],
  fg: p.blue[400],
  focus: p.blue[500],
  selection: opacity(40, p.blue.a700),
  highlight: p.cyan[400],
  code: p.cyan[400],
  findMatch: p.blue.a700,
  // searchMatch: p.purple.a600,
  highlightWord: p.neutral[500],
  cursor: p.neutral[200],
  lineNumberActive: p.neutral[500],
  // Semantic colors
  fgError: p.red[550],
  fgWarn: p.yellow[550],
  fgInfo: p.blue.a700,
  bgDelete: opacity(10, p.red[550]),
  fgDelete: opacity(50, p.red[550]),
  bgAdd: opacity(10, p.green[550]),
  fgAdd: p.green[550],
  fgModify: p.blue[400],
  fgConflict: p.orange[550],
  // Bracket colors
  bracket1: p.neutral[500],
  bracket2: p.neutral[350],
  bracket3: p.blue[400],
  bracket4: p.purple[400],
  bracket5: p.pink[400],
  bracket6: p.red[200],
  // Terminal colors
  black: p.black,
  brightBlack: p.neutral[900],
  red: opacity(75, p.red[550]),
  brightRed: p.red[400],
  green: opacity(75, p.teal[600]),
  brightGreen: p.teal[400],
  yellow: opacity(75, p.yellow[550]),
  brightYellow: p.yellow[300],
  blue: opacity(75, p.blue[400]),
  brightBlue: p.blue[300],
  magenta: opacity(75, p.pink[600]),
  brightMagenta: p.pink[400],
  cyan: opacity(75, p.cyan[600]),
  brightCyan: p.cyan[400],
  white: p.white,
  brightWhite: p.neutral[150],
}

const brandByMode = {
  'vs-dark': darkBrand,
  vs: darkBrand,
}

const darkFG = {
  base: p.neutral[200],
  icon: p.neutral[500],
  button: p.white,
  badge: p.white,
  selection: p.white,
  selectionInactive: p.neutral[300],
  activity: p.neutral[400],
  activityInactive: p.neutral[560],
  tab: p.neutral[200],
  tabInactive: p.neutral[500],
  tabUnfocused: p.neutral[500],
  tabUnfocusedInactive: p.neutral[580],
  title: p.neutral[200],
  lineNumber: p.neutral[580],
}

const fgByMode = {
  'vs-dark': darkFG,
  vs: darkFG,
}

const softBG = {
  editor: p.neutral[880],
  sidebar: p.neutral[820],
  sidebarHeader: p.neutral[780],
  activity: p.neutral[820],
  title: p.neutral[710],
  titleInactive: p.neutral[820],
  status: p.neutral[710],
  tab: p.neutral[710],
  tabInactive: p.neutral[880],
  tabHover: p.neutral[770],
  tabUnfocused: p.neutral[780],
  tabUnfocusedHover: p.neutral[830],
  widget: p.neutral[770],
  input: p.neutral[710],
  notifications: opacity(95, p.neutral[710]),
  gutter: p.neutral[880],
  minimap: p.neutral[880],
}

const hardBG = {
  editor: p.neutral[920],
  sidebar: p.neutral[900],
  sidebarHeader: p.neutral[840],
  activity: p.neutral[900],
  title: p.neutral[780],
  titleInactive: p.neutral[900],
  status: p.neutral[780],
  tab: p.neutral[780],
  tabInactive: p.neutral[920],
  tabHover: p.neutral[840],
  tabUnfocused: p.neutral[860],
  tabUnfocusedHover: p.neutral[900],
  widget: p.neutral[840],
  input: p.neutral[780],
  notifications: opacity(95, p.neutral[780]),
  gutter: p.neutral[920],
  minimap: p.neutral[920],
}

const bgBySubtype = {
  soft: softBG,
  hard: hardBG,
}

const softBorder = {
  panel: p.black,
  sidebar: p.black,
  sidebarHeader: p.neutral[740],
  activity: p.black,
  title: TRANSPARENT,
  status: TRANSPARENT,
  breadcrumbTop: p.black,
  tabBar: p.black,
  tab: p.neutral[700],
  tabTop: TRANSPARENT,
  tabUnfocused: p.neutral[770],
  tabUnfocusedTop: TRANSPARENT,
  widget: p.neutral[660],
  input: p.neutral[600],
  notifications: p.neutral[660],
  ruler: p.neutral[700],
  indent: p.neutral[740],
}

const hardBorder = {
  panel: p.black,
  sidebar: p.black,
  sidebarHeader: p.neutral[780],
  activity: p.black,
  title: TRANSPARENT,
  status: TRANSPARENT,
  breadcrumbTop: p.black,
  tabBar: p.black,
  tab: p.neutral[760],
  tabTop: TRANSPARENT,
  tabUnfocused: p.neutral[830],
  tabUnfocusedTop: TRANSPARENT,
  widget: p.neutral[740],
  input: p.neutral[650],
  notifications: p.neutral[710],
  ruler: p.neutral[760],
  indent: p.neutral[800],
}

const borderBySubtype = {
  soft: softBorder,
  hard: hardBorder,
}

export default function buildWorkbenchColors(
  mode: ThemeMode,
  subtype: ThemeSubtype
) {
  const brand = brandByMode[mode]
  const fg = fgByMode[mode]
  const bg = bgBySubtype[subtype]
  const border = borderBySubtype[subtype]

  const workbench: Partial<WorkbenchColors> = {
    foreground: fg.base,
    'icon.foreground': fg.icon,
    focusBorder: brand.focus,
    'selection.background': brand.selection,
    'textPreformat.foreground': brand.code,
    'textLink.foreground': brand.fg,
    'button.background': opacity(80, brand.bg),
    'button.foreground': fg.button,
    'button.border': brand.bg,
    'input.foreground': fg.base,
    'input.background': bg.input,
    'input.border': border.input,
    'badge.foreground': fg.badge,
    'badge.background': brand.bg,
    'list.activeSelectionBackground': brand.bg,
    'list.activeSelectionForeground': fg.selection,
    'list.inactiveSelectionBackground': brand.bgInactive,
    'list.inactiveSelectionForeground': fg.selectionInactive,
    'list.highlightForeground': brand.highlight,
    'list.hoverBackground': brand.bgHover,
    'list.dropBackground': opacity(50, brand.bg),
    'sideBar.background': bg.sidebar,
    'sideBar.border': border.sidebar,
    'sideBarTitle.foreground': fg.base,
    'sideBarSectionHeader.border': border.sidebarHeader,
    'sideBarSectionHeader.background': bg.sidebarHeader,
    'activityBar.background': bg.activity,
    'activityBar.foreground': fg.activity,
    'activityBar.activeBorder': brand.fg,
    'activityBar.border': border.activity,
    'activityBar.inactiveForeground': fg.activityInactive,
    'editorGroup.border': border.panel,
    'editorGroupHeader.tabsBackground': bg.tabInactive,
    'editorGroupHeader.tabsBorder': border.breadcrumbTop,
    'editorGroupHeader.border': border.tabBar,
    'tab.border': border.tab,
    'tab.activeBorderTop': border.tabTop,
    'tab.activeBackground': bg.tab,
    'tab.activeForeground': fg.tab,
    'tab.inactiveBackground': bg.tabInactive,
    'tab.inactiveForeground': fg.tabInactive,
    'tab.hoverBackground': bg.tabHover,
    'tab.unfocusedActiveForeground': fg.tabUnfocused,
    'tab.unfocusedActiveBackground': bg.tabUnfocused,
    'tab.unfocusedActiveBorderTop': border.tabUnfocusedTop,
    'tab.unfocusedInactiveForeground': fg.tabUnfocusedInactive,
    'tab.unfocusedHoverBackground': bg.tabUnfocusedHover,
    'editor.background': bg.editor,
    'editor.foreground': fg.base,
    'editorLineNumber.foreground': fg.lineNumber,
    'editorLineNumber.activeForeground': brand.lineNumberActive,
    'editorCursor.foreground': brand.cursor,
    'editor.wordHighlightBackground': opacity(20, brand.highlightWord),
    'editor.findMatchBackground': opacity(50, brand.findMatch),
    'editor.lineHighlightBorder': TRANSPARENT,
    'editor.lineHighlightBackground': opacity(5, fg.base),
    'editorIndentGuide.background': border.indent,
    'editorOverviewRuler.border': border.ruler,
    'editorOverviewRuler.wordHighlightForeground': opacity(
      50,
      brand.highlightWord
    ),
    'editorOverviewRuler.findMatchForeground': opacity(90, brand.findMatch),
    'editorOverviewRuler.modifiedForeground': opacity(65, brand.fgModify),
    'editorOverviewRuler.addedForeground': opacity(50, brand.fgAdd),
    'editorOverviewRuler.deletedForeground': opacity(75, brand.fgDelete),
    'editorGutter.background': bg.gutter,
    'editorGutter.modifiedBackground': brand.fgModify,
    'editorError.foreground': brand.fgError,
    'editorWarning.foreground': brand.fgWarn,
    'editorInfo.foreground': brand.fgInfo,
    'editorBracketMatch.border': TRANSPARENT,
    'editorBracketHighlight.foreground1': brand.bracket1,
    'editorBracketHighlight.foreground2': brand.bracket2,
    'editorBracketHighlight.foreground3': brand.bracket3,
    'editorBracketHighlight.foreground4': brand.bracket4,
    'editorBracketHighlight.foreground5': brand.bracket5,
    'editorBracketHighlight.foreground6': brand.bracket6,
    'minimap.findMatchHighlight': brand.findMatch,
    'minimap.background': bg.minimap,
    'editorWidget.background': bg.widget,
    'editorWidget.foreground': fg.base,
    'editorWidget.border': border.widget,
    'diffEditor.insertedTextBackground': brand.bgAdd,
    'diffEditor.removedTextBackground': brand.bgDelete,
    'statusBar.debuggingBackground': brand.bg,
    'statusBar.focusBorder': TRANSPARENT,
    'statusBar.border': border.status,
    'pickerGroup.foreground': brand.fg,
    'quickInput.background': bg.sidebar,
    'terminal.ansiBlack': brand.black,
    'terminal.ansiBrightBlack': brand.brightBlack,
    'terminal.ansiRed': brand.red,
    'terminal.ansiBrightRed': brand.brightRed,
    'terminal.ansiGreen': brand.green,
    'terminal.ansiBrightGreen': brand.brightGreen,
    'terminal.ansiYellow': brand.yellow,
    'terminal.ansiBrightYellow': brand.brightYellow,
    'terminal.ansiBlue': brand.blue,
    'terminal.ansiBrightBlue': brand.brightBlue,
    'terminal.ansiMagenta': brand.magenta,
    'terminal.ansiBrightMagenta': brand.brightMagenta,
    'terminal.ansiCyan': brand.cyan,
    'terminal.ansiBrightCyan': brand.brightCyan,
    'terminal.ansiWhite': brand.white,
    'terminal.ansiBrightWhite': brand.brightWhite,
    'titleBar.activeBackground': bg.title,
    'titleBar.activeForeground': fg.title,
    'titleBar.inactiveBackground': bg.titleInactive,
    'titleBar.border': border.title,
    'gitDecoration.conflictingResourceForeground': brand.fgConflict,
    'gitDecoration.deletedResourceForeground': brand.fgDelete,
    'gitDecoration.addedResourceForeground': brand.fgAdd,
    'gitDecoration.modifiedResourceForeground': brand.fgModify,
    'notifications.background': bg.notifications,
    'notifications.border': border.notifications,
    'extensionButton.prominentBackground': brand.bg,
    'extensionIcon.starForeground': brand.fg,
    'extensionIcon.verifiedForeground': brand.fg,
  }

  return applyWorkbenchFallbacks(workbench)
}
